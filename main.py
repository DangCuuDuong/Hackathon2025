# streamlit run c:/Users/Admin/Documents/Study/Projects/HK6/Hackathon2025/BE/main.py
import streamlit as st
import pandas as pd
import os
from pathlib import Path
import FE.CollectionComponets as clp
import FE.ImageCollection as ic
import json
from JSON_FILE.combine import combind_json
from BE.predict_food import predict_objects_and_weight
from BE.input_clean import clean_ingredient_name
import FE.Home as home
import FE.RecommendationRecipe as rr

st.set_page_config(page_title="Smart Refrigerator", page_icon="üçΩÔ∏è", layout="wide")


st.markdown(
    """
    <style>
    .title_main {
        font-size: 85px !important; 
        font-weight: bold;
        color: #54b8cf; /* M√†u s·∫Øc c·ªßa ti√™u ƒë·ªÅ */
        text-align: center;
        margin-top: 20px;
        margin-bottom: 20px;
        font-family: 'Open Sans'; /* Ph√¥ng ch·ªØ */
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3); /* ƒê·ªï b√≥ng cho ti√™u ƒë·ªÅ */
    }

    .one1{
        font-size: 45px !important;
        font-weight: bold;
        color: #eab676; /* M√†u s·∫Øc c·ªßa ti√™u ƒë·ªÅ */
        text-align: center;
        font-family: 'Open Sans'; /* Ph√¥ng ch·ªØ */
    }

    .one2{
        font-size: 30px !important;
        font-weight: bold;
        color: #f0dba2; /* M√†u s·∫Øc c·ªßa ti√™u ƒë·ªÅ */
        margin-bottom: 8px;
        color: #4CAF50;
        text-align: left;
        font-family: 'Open Sans'; /* Ph√¥ng ch·ªØ */
        
    }
    
    .recipe_suggestion {
        font-size: 30px !important;
        font-weight: bold;
        color: #83d4e5; /* M√†u s·∫Øc c·ªßa ti√™u ƒë·ªÅ */
        text-align: center;
        font-family: 'Open Sans'; /* Ph√¥ng ch·ªØ */
        margin-top: 20px;
        margin-bottom: 20px;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3); /* ƒê·ªï b√≥ng cho ti√™u ƒë·ªÅ */
    }


    .stButton > button {
        height: 45px; /* Gi·∫£m chi·ªÅu cao n√∫t ƒë·ªÉ kh·ªõp v·ªõi √¥ nh·∫≠p li·ªáu */
        padding: 0 10px; /* ƒêi·ªÅu ch·ªânh padding n·∫øu c·∫ßn */
        display: flex;
        text-siÃâze: 5px; /* K√≠ch th∆∞·ªõc ch·ªØ trong n√∫t */
        margin-top: 30px;
        align-items: center;
        justify-content: center;    
    }

    div.stButton > button:first-child {
        background-color: #953608;
        color: white;
        font-size: 18px;
        padding: 10px 24px;
        border-radius: 8px;
        border: none;
        transition: background-color 0.3s ease;
    }

    div.stButton > button:hover {
        background-color: #45a049;
        color: #fff;
    }



    div.stButton > button[aria-label="üì¶ Save All Ingredients"] {
        width: 100%; /* ho·∫∑c gi√° tr·ªã c·ª• th·ªÉ nh∆∞ 300px */
        max-width: 400px;  /* tr√°nh v∆∞·ª£t qu√° */
        padding: 12px 24px;
        font-size: 18px;
        border-radius: 8px;
        background-color: #FF5733;
        color: white;
    }

    /* Thay ƒë·ªïi phong c√°ch cho selectbox */
    div.stSelectbox > div { 
        border-radius: 1px; /* Bo tr√≤n g√≥c */
        font-size: 16px; /* K√≠ch th∆∞·ªõc ch·ªØ */
        font-family: 'Poppins', sans-serif; /* Font ch·ªØ */
        color: #333; /* M√†u ch·ªØ */
        transition: all 0.3s ease; /* Hi·ªáu ·ª©ng chuy·ªÉn ƒë·ªông */
    }

    /* Hi·ªáu ·ª©ng hover cho selectbox */
    div.stSelectbox > div:hover {
        border-color: #45a049; /* ƒê·ªïi m√†u vi·ªÅn khi hover */
        box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1); /* Th√™m b√≥ng m·ªù khi hover */
    }

    /* Style cho label */
    label[for="selectbox"] {
        font-size: 18px;
        font-weight: bold;
        color: #4CAF50;
        margin-bottom: 10px;
    }


}
    </style>
    """,
    unsafe_allow_html=True
)
from Generate_Receipt.main import load_and_generate_recipes
# C·∫•u h√¨nh ƒë∆∞·ªùng d·∫´n
CSV_PATH = "ingredients.csv"



# Kh·ªüi t·∫°o CSV n·∫øu ch∆∞a t·ªìn t·∫°i
if not os.path.exists(CSV_PATH):
    df = pd.DataFrame(columns=["name", "category", "count"])
    df.to_csv(CSV_PATH, index=False)

st.markdown("<div class='title_main'>Fridgey</div>", unsafe_allow_html=True)

siddbar_option = ["Home", "Recommendation Recipe", "Collection Component", "Collection By Image"]
st.sidebar.title("Navigation")
selected_sidebar = st.sidebar.selectbox("Select Option", siddbar_option)

if selected_sidebar == "Home":
    home.get_page_home()
elif selected_sidebar == "Recommendation Recipe":
    rr.RecommendationRecipe()
elif selected_sidebar == "Collection Component":
    clp.create_recommendation()
elif selected_sidebar == "Collection By Image":
    img = ic.ImageCollection()
    
    if img != None:
        result = predict_objects_and_weight(img)
        with open("JSON_FILE/predict.json", "w", encoding="utf-8") as f:
            json.dump(result, f, ensure_ascii=False, indent=4)
        combind_json("JSON_FILE/main.json", "JSON_FILE/predict.json")
    st.write(img)







# Footer
st.markdown("---")
st.markdown("¬© 2025 My App. All rights reserved.")